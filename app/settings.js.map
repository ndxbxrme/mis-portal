{
  "version": 3,
  "file": "settings.js",
  "sourceRoot": "../src/",
  "sources": [
    "settings.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\n\r\n{app} = require 'electron'\r\npath = require 'path'\r\ndotty = require 'dotty'\r\nfs = require 'fs-extra'\r\n\r\nportalKey = process.env.MIS_PORTAL_KEY\r\nappKey = {}\r\ntry\r\n  appKey = JSON.parse new Buffer(portalKey, 'base64').toString('binary')\r\ncatch e\r\n\r\nsettings = \r\n  mainWindow:\r\n    width: 1280\r\n    height: 800\r\n  autoDownload: true\r\n  autoUpload: true\r\nsettingsPath = path.join app.getPath('userData'), 'settings.json'\r\nloaded = false\r\nportalUrl = ''\r\n\r\nload = ->\r\n  new Promise (resolve, reject) ->\r\n    exists = await fs.exists settingsPath\r\n    if exists\r\n      settings = JSON.parse await fs.readFile settingsPath, 'utf8'\r\n      loaded = true\r\n      resolve()\r\n    else\r\n      await save()\r\n      loaded = true\r\n      resolve()\r\nsave = ->\r\n  fs.writeFile settingsPath, JSON.stringify(settings), 'utf8'\r\n\r\nmodule.exports =\r\n  badKey: ->\r\n    Object.keys(appKey).length < 1\r\n  load: load\r\n  save: save\r\n  get: (key) ->\r\n    dotty.get settings, key\r\n  set: (key, value) ->\r\n    dotty.put settings, key, value\r\n  loaded: ->\r\n    loaded\r\n  portalUrl: (url) ->\r\n    appKey.url\r\n  aws: (field) ->\r\n    appKey[field]\r\n  userIsAdmin: ->\r\n    user = dotty.get settings, 'user'\r\n    if user\r\n      return user.profile.type.code is '00' or user.profile.type.code is '01'\r\n    false\r\n  userIsClientMaster: ->\r\n    user = dotty.get settings, 'user'\r\n    if user\r\n      return user.profile.type.code is '03'\r\n    false"
  ]
}